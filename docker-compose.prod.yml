version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: holino_postgres_prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-holino_db}
      POSTGRES_USER: ${POSTGRES_USER:-holino_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - holino_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-holino_user} -d ${POSTGRES_DB:-holino_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Backend API (Production)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: holino_backend_prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: ${PORT:-3001}
      DATABASE_URL: postgresql://${POSTGRES_USER:-holino_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-holino_db}?schema=public&connection_limit=20&pool_timeout=30
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      API_VERSION: ${API_VERSION:-v1}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
    ports:
      - "${PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - holino_network
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Starting production server...' &&
        node src/index.js
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  postgres_data:
    driver: local

networks:
  holino_network:
    driver: bridge

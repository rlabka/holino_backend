version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: holino_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: holino_db
      POSTGRES_USER: holino_user
      POSTGRES_PASSWORD: holino_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - holino_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U holino_user -d holino_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: .
    container_name: holino_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://holino_user:holino_password@postgres:5432/holino_db?schema=public
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./uploads:/app/uploads
    networks:
      - holino_network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run dev
      "

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: holino_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@holino.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - holino_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  holino_network:
    driver: bridge
